type Void {
  null: Boolean
}

type Query {
  getBooks: [Book]
}

type Mutation {
  createUser(input: createUserInput!): Void!
  login(input: LoginInput!): User!
  logout(input: cookieInput): LogoutResponse
}

type Book {
  title: String
  author: String
}

type User {
  id: ID
  username: String
  following: [String]
}

type LogoutResponse {
  success: Boolean
}

input createUserInput {
  username: String!
  password: String!
}

input LoginInput {
  username: String!
  password: String!
}

input cookieInput {
  name: String
}

schema {
  query: Query
  mutation: Mutation
}